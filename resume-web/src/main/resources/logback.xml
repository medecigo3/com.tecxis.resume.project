<configuration>
    <appender name="resumeLog" class="ch.qos.logback.core.rolling.RollingFileAppender">       
        <file>target/logs/resume.log</file>
        <append>false</append>
        <encoder>
            <pattern>%d %-5p [%t]:%X{txId} %c{1} - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
        	<fileNamePattern>target/logs/resume.%d{yyyy-MM-dd-HH-mm}.%i.log</fileNamePattern>	        
             <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
			<maxFileSize>100MB</maxFileSize>    
			<maxHistory>60</maxHistory>
			<totalSizeCap>20GB</totalSizeCap>	       
	    </rollingPolicy>
    </appender>
    <appender name="springLog" class="ch.qos.logback.core.FileAppender">      
        <file>target/logs/spring.log</file>
        <append>false</append>
        <encoder>
            <pattern>%d %-5p [%t]:%X{txId} %c{1} - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>    
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>TRACE</level>
        </filter>
<!--         <withJansi>true</withJansi>  --> <!-- Coloring doesn't work in windows 10 with logback. -->
        <encoder>
            <pattern>%d %highlight(%-5level) [%t]:%X{txId} %c{1} - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
	<logger name="com.tecxis" level="info"/>
	<!-- Logs Spring's transaction unit test context (currently not logging to 'consoleLog' and 'resumeLog' appenders)-->
     <logger name="org.springframework.transaction" level="info" additivity="false">
    	<appender-ref ref="springLog"/>
    </logger>
    <!-- No additivity means log to 'springLog' appender only. See additivity setting: http://logback.qos.ch/manual/architecture.html-->
    <!-- Logs SQL queries for debugging purposes -->
    <logger name="org.springframework.jdbc" level="info" additivity="false">
    	<appender-ref ref="springLog"/>
    </logger>
    <logger name="org.springframework.test" level="info" additivity="false">
    	<appender-ref ref="springLog"/>
    </logger>
      <!-- Logs Spring repository initialization (all appenders)-->
    <logger name="org.springframework.data" level="info" additivity="true">
    	<appender-ref ref="springLog"/>
    </logger> 
    <!-- Logs creation of EntityManager and  init. of JpaQueryFactory and NamedQuery for Spring repositories (all appenders)-->
    <logger name="org.springframework.orm.jpa" level="info" additivity="true">
    	<appender-ref ref="springLog"/>
    </logger> 
    <!-- Remaining Spring logs at INFO level -->
    <logger name="org.springframework" level="info" additivity="true">
    	<appender-ref ref="springLog"/>
    </logger>
  
	<!-- Logs un-formatted SQL statements with parameter values -->
    <logger name="net.ttddyy.dsproxy.listener.logging" level="info"/>

    <logger name="bitronix.tm" level="warn"/>
	
	<logger name="net.sf.ehcache" level="info"/>
    <logger name="com.vladmihalcea" level="info"/>
	
	<!-- To isolate hibernate logs create a separate appender. Use 'springLog' appender as example-->
    <logger name="org.hibernate.hql" level="info"/>
    <logger name="org.hibernate.event.internal" level="info"/>
    <logger name="org.hibernate.engine.transaction.internal" level="info"/>
    <logger name="org.hibernate.cache" level="info"/>
    <!-- Logs cascading actions -->
    <logger name="org.hibernate.engine.internal.Cascade" level="info"/>
    <!-- Logs init. of non-lazy collections (in trace level)-->
    <logger name="org.hibernate.engine.internal.StatefulPersistenceContext" level="info"/>
    <!-- Logs session metrics -->
    <logger name="org.hibernate.engine.internal.StatisticalLoggingSessionEventListener" level="info"/>
    <!--  "A session action that may be cascaded from parent entity to its children" from class Hibernate JavaDoc (5.5.9.Final)-->
    <logger name="org.hibernate.engine.spi.CascadingAction" level="info"/>
    <!-- Logs entity persist, merge, delete, etc. events -->
    <logger name="org.hibernate.event.internal.DefaultPersistEventListener" level="info" />
    <logger name="org.hibernate.event.internal.DefaultMergeEventListener" level="info" />
    <logger name="org.hibernate.event.internal.DefaultRefreshEventListener" level="info" />            
    <logger name="org.hibernate.event.internal.DefaultLoadEventListener" level="info"/>
        <!-- Logs flush executions -->
    <logger name="org.hibernate.event.internal.AbstractFlushingEventListener" level="trace"/>    
    <!-- Logs formatted SQL statements in DEBUG level. Normally SQL logs (non-formatted) from n.t.d.l.l.SLF4JQueryLoggingListener are enough. -->
    <logger name="org.hibernate.SQL" level="debug"/>
    <!-- Logs JDBC bind parameters -->
    <logger name="org.hibernate.type.descriptor.sql" level="warn"/>
    <logger name="org.hibernate.SQL_SLOW" level="warn"/>
    <!-- Remaining hibernate logs at INFO level. Use it judiciously: too many logs affect performance.-->
	<!-- To avoid duplicate logs, disable all the hibernate loggers above when this logger is set to trace or debug level -->	
	<logger name="org.hibernate" level="info"/>
    
	<root>
		<!-- To isolate Spring Logs do not add springLog at the root level. -->
		<appender-ref ref="resumeLog"/>
		<appender-ref ref="console"/>
	</root>
</configuration>